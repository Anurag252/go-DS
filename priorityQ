type minHeap []*ListNode

func (h minHeap) Less(i, j int) bool {
    if h[i] == nil {
        return false
    }
    
    if h[j] == nil {
        return true
    }
    
    return h[i].Val < h[j].Val
}

func (h minHeap) Swap(i, j int) {
    h[i], h[j] = h[j], h[i]
}

func (h minHeap) Len() int {
    return len(h)
}

func (h *minHeap) Push(v interface{}) {
    *h = append(*h, v.(*ListNode))
}

func (h *minHeap) Pop() interface{} {
    old := *h
    l := len(old)
    r := old[l-1]
    *h = old[:l-1]
    return r
}
